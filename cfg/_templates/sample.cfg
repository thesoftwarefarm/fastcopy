# ---- SSH (to reach the remote DB through a tunnel) ----
REMOTE_HOST=1.2.3.4
REMOTE_SSH_USER=ubuntu
SSH_PORT=22
SSH_IDENTITY_FILE=~/.ssh/id_rsa # optional; omit if using default agent keys
SSH_STRICT_HOST_KEY_CHECKING=no # yes|no

# ---- Remote MySQL (credentials are for MySQL, not SSH) ----
REMOTE_DB_HOST=127.0.0.1 # usually 127.0.0.1 from the server
REMOTE_DB_PORT=3306
REMOTE_DB_USER=dbuser # user with SELECT and LOCK TABLES privileges
REMOTE_DB_PASSWORD=mypassword
SOURCE_DB_NAME=dbname

# ---- Local dump destination ----
DUMP_THREADS=8 # optional; defaults to nproc
DUMP_COMPRESSION=zstd # zstd|gzip|none

# ---- Target Docker MySQL ----
TARGET_DOCKER_CONTAINER=mysql8-mysql-dev8-1
TARGET_DB_USER=root
TARGET_DB_PASSWORD=my-secret-pw
TARGET_DB_NAME=clone_dbname # the new schema name in Docker. If it exists, it will be dropped first (!!!)

# You usually don't need to set these; the script auto-detects:
# TARGET_DB_HOST=127.0.0.1
# TARGET_DB_PORT=3307

# ---- Loader tuning ----
LOAD_THREADS=8
DEFER_INDEXES=all # all|fulltext|off
IGNORE_EXISTING=true

# if you want to exclude some tables' data (comma-separated list), set here:
# this will only exclude data, not the table structure
EXCLUDE_TABLES_DATA="table1,table2"

KEEP_DUMP=false # whether to keep the dump files after loading (true|false)
CLONE_WITH_TIMESTAMP=false # whether to append a timestamp to the SOURCE_DB_NAME (true|false)